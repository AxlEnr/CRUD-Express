generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model carrito {
  id         Int  @id @default(autoincrement())
  id_usuario Int

  usuario    usuarios  @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  detalles   carrito_detalle[]
}

model carrito_detalle {
  id          Int  @id @default(autoincrement())
  id_carrito  Int
  id_producto Int
  cantidad    Int

  carrito  carrito  @relation(fields: [id_carrito], references: [id], onDelete: Cascade)
  producto productos @relation(fields: [id_producto], references: [id], onDelete: Cascade)
}

model categorias {
  id     Int     @id @default(autoincrement())
  nombre String  @db.VarChar(25)

  productos productos[]
}

model direcciones {
  id              Int      @id @default(autoincrement())
  id_usuario      Int
  calle           String  @db.VarChar(25)
  numero_exterior String? @db.VarChar(5)
  numero_interior String? @db.VarChar(5)
  ciudad          String  @db.VarChar(25)
  estado          String  @db.VarChar(25)
  codigo_postal   String  @db.VarChar(5)
  pais            String  @db.VarChar(15)

  usuario usuarios @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  ordenes ordenes[]
}

model orden_detalle {
  id              Int      @id @default(autoincrement())
  id_orden        Int
  id_producto     Int
  cantidad        Int
  precio_unitario Decimal @db.Decimal(10, 2)

  orden    ordenes   @relation(fields: [id_orden], references: [id], onDelete: Cascade)
  producto productos @relation(fields: [id_producto], references: [id], onDelete: Cascade)
}

model ordenes {
  id             Int              @id @default(autoincrement())
  id_usuario     Int
  id_direccion   Int
  total          Decimal         @db.Decimal(10, 2)
  estado         ordenes_estado? @default(pendiente)
  fecha_creacion DateTime        @default(now()) @db.Timestamp(0)

  usuario   usuarios   @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  direccion direcciones @relation(fields: [id_direccion], references: [id], onDelete: Cascade)
  detalles  orden_detalle[]
}

model productos {
  id             Int      @id @default(autoincrement())
  nombre         String   @db.VarChar(20)
  descripcion    String?  @db.Text
  precio         Decimal  @db.Decimal(10, 2)
  stock          Int
  marca          String?  @db.VarChar(20)
  capacidad      Int?
  id_categoria   Int?
  imagen_url     String?  @db.VarChar(500)
  fecha_creacion DateTime @default(now()) @db.Timestamp(0)

  categoria        categorias?      @relation(fields: [id_categoria], references: [id], onDelete: SetNull)
  resenas          resenas[]
  carritoDetalles  carrito_detalle[]
  ordenDetalles    orden_detalle[]
}

model resenas {
  id           Int       @id @default(autoincrement())
  id_usuario   Int
  id_producto  Int
  calificacion Int?
  comentario   String?  @db.Text
  imagen_url   String?  @db.VarChar(100)
  fecha        DateTime @default(now()) @db.Timestamp(0)

  usuario  usuarios  @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  producto productos @relation(fields: [id_producto], references: [id], onDelete: Cascade)
}

model usuarios {
  id             Int           @id @default(autoincrement())
  nombre         String        @db.VarChar(30)
  apellido       String        @db.VarChar(30)
  edad           String        @db.VarChar(4)
  correo         String        @db.VarChar(50) @unique
  contrasena     String        @db.VarChar(255)
  telefono       String?       @db.VarChar(10)
  rol            usuarios_rol? @default(cliente)
  fecha_registro DateTime      @default(now()) @db.Timestamp(0)

  carritos    carrito[]
  direcciones direcciones[]
  ordenes     ordenes[]
  resenas     resenas[]
}

enum ordenes_estado {
  pendiente
  pagado
  enviado
  entregado
  cancelado
}

enum usuarios_rol {
  cliente
  admin
}